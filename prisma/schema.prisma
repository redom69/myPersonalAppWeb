generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

model user {
  u_id                String                @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  updated_at          DateTime              @default(now()) @db.Timestamptz(6)
  email               String                @unique
  password            String
  o_id                String?               @db.Uuid
  active              Boolean?              @default(false)
  is_admin            Boolean?              @default(false)
  organizations       organizations?        @relation(fields: [o_id], references: [o_id], onDelete: Cascade)
  user_data           user_data?
  user_reset_password user_reset_password[]
  config_patient      config_patient[]
  ingestion           ingestion[]

  @@schema("auth")
}

model user_data {
  u_id        String    @id @db.Uuid
  name        String?
  surnames    String?
  phone       String?
  birth_date  DateTime? @db.Timestamptz(6)
  nationality String?
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  user        user      @relation(fields: [u_id], references: [u_id], onDelete: Cascade)

  @@schema("auth")
}

model user_reset_password {
  id         String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  u_id       String?   @db.Uuid
  r          String?   @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  user       user?     @relation(fields: [u_id], references: [u_id], onDelete: Cascade)

  @@schema("auth")
}

model devices {
  d_id                    String                    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  created_at              DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at              DateTime                  @default(now()) @db.Timestamptz(6)
  active                  Boolean                   @default(true)
  serial                  String                    @unique(map: "serial_unique") @default("")
  structure_version       String                    @default("'")
  password                String?
  model                   String?
  ingestion               ingestion[]
  organization_has_device organization_has_device[]
  sessions                sessions[]

  @@schema("public")
}

model organizations {
  o_id                     String                     @id(map: "organization_pkey") @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  name                     String
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime                   @default(now()) @db.Timestamptz(6)
  street_name              String                     @default("")
  street_number            String                     @default("")
  country                  String                     @default("")
  city                     String                     @default("")
  role                     String
  premium                  Boolean                    @default(true)
  postal_code              String?
  user                     user[]
  organization_has_device  organization_has_device[]
  organization_has_patient organization_has_patient[]

  @@schema("public")
}

model sessions {
  id                                       String     @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  created_at                               DateTime   @default(now()) @db.Timestamptz(6)
  updated_at                               DateTime   @default(now()) @db.Timestamptz(6)
  steps_automatic_forward                  Int        @default(0)
  steps_automatic_backward                 Int        @default(0)
  steps_intention_forward                  Int        @default(0)
  steps_intention_backward                 Int        @default(0)
  flexos_hip                               Int        @default(0)
  flexos_knee                              Int        @default(0)
  flexos_ankle                             Int        @default(0)
  effort                                   Int        @default(0)
  d_id                                     String?    @db.Uuid
  date                                     DateTime   @default(now()) @db.Timestamptz(6)
  start_time                               DateTime?  @db.Timestamptz(6)
  end_time                                 DateTime   @db.Timestamptz(6)
  p_id                                     String     @db.Uuid
  time_automatic_forward                   Float      @default(0)
  time_automatic_backward                  Float      @default(0)
  time_intentiton_forward                  Float      @default(0)
  time_intention_backward                  Float      @default(0)
  steps_total                              Int        @default(0)
  time_total                               Float      @default(0)
  cadence_automatic_forward                Float      @default(0)
  cadence_automatic_backward               Float      @default(0)
  cadence_intention_forward                Float      @default(0)
  cadence_intention_backward               Float      @default(0)
  evaluation                               Int?       @default(0)
  has_chest                                Int?       @default(0)
  threshold_hipl                           Int?       @default(0)
  threshold_kneel                          Int?       @default(0)
  threshold_hipr                           Int?       @default(0)
  threshold_kneer                          Int?       @default(0)
  i_id                                     String?    @db.Uuid
  timeWalking                              Float?
  timeUse                                  Float?
  timeSession                              Float?
  threshold_anklel                         Int?
  threshold_ankler                         Int?
  ingestion_ingestion_session_idTosessions ingestion? @relation("ingestion_session_idTosessions")
  devices                                  devices?   @relation(fields: [d_id], references: [d_id], onDelete: Cascade)
  ingestion                                ingestion? @relation(fields: [i_id], references: [id], onDelete: Cascade, map: "sessions_ingestion_id_fkey")

  @@schema("public")
}

model ingestion {
  id                                      String     @id @unique(map: "idx_unique_ingestion_id") @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  created_at                              DateTime   @default(now()) @db.Timestamptz(6)
  updated_at                              DateTime   @default(now()) @db.Timestamptz(6)
  process                                 Boolean    @default(false)
  error_msg                               String?
  zip_data                                String?
  u_id                                    String?    @db.Uuid
  d_id                                    String?    @db.Uuid
  is_session                              Boolean?
  session_id                              String?    @unique @db.Uuid
  alarms                                  alarms[]
  devices                                 devices?   @relation(fields: [d_id], references: [d_id], onUpdate: NoAction, map: "fk_ingestion_device")
  user                                    user?      @relation(fields: [u_id], references: [u_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ingestion_user")
  sessions_ingestion_session_idTosessions sessions?  @relation("ingestion_session_idTosessions", fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sessions                                sessions[]

  @@schema("public")
}

model alarms {
  id         String     @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  event_type String?    @db.VarChar(255)
  event_id   String?
  value      Int?
  params     Json?
  timestamp  DateTime?  @default(now()) @db.Timestamptz(6)
  version    String?
  updated_at DateTime   @default(now()) @db.Timestamptz(6)
  i_id       String?    @db.Uuid
  ingestion  ingestion? @relation(fields: [i_id], references: [id], onDelete: Cascade, map: "alarms_ingestion_id_fkey")

  @@schema("public")
}

model config_patient {
  p_id         String    @id @db.Uuid
  version      Int?      @default(0)
  weight       Int?      @default(0)
  height       Int?      @default(0)
  weight_units String?   @default("kg")
  height_units String?   @default("cm")
  chest_size   String?   @default("M")
  shoe_size    Int?      @default(0)
  femur_len_l  Int?      @default(0)
  femur_len_r  Int?      @default(0)
  tibia_len_l  Int?      @default(0)
  tibia_len_r  Int?      @default(0)
  walker_len   Int?      @default(0)
  hip_width    Int?      @default(0)
  flexos_hip   Int?      @default(0)
  flexos_knee  Int?      @default(0)
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
  u_id         String?   @db.Uuid
  abd          Int?      @default(0)
  ankle_lock   Boolean?  @default(false)
  corset       String?   @default("Small Flat") @db.VarChar(255)
  patients     patients  @relation(fields: [p_id], references: [p_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_config_patient")
  user         user?     @relation(fields: [u_id], references: [u_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model patient_data {
  p_id                   String    @id @db.Uuid
  name                   String?
  surnames               String?
  legal_guardian_email_1 String?
  legal_guardian_email_2 String?
  phone                  String?
  legal_guardian_name_1  String?
  legal_guardian_name_2  String?
  created_at             DateTime? @default(now()) @db.Timestamptz(6)
  updated_at             DateTime? @default(now()) @db.Timestamptz(6)
  patients               patients  @relation(fields: [p_id], references: [p_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_patient")

  @@schema("public")
}

model patients {
  p_id                     String                     @id @db.Uuid
  sex                      String?
  birth_date               DateTime?                  @db.Timestamptz(6)
  pathology                String[]
  affection                String[]
  treatment                String[]
  city                     String?
  nationality              String?
  last_session             DateTime?                  @db.Timestamptz(6)
  total_sessions           Int?                       @default(0)
  total_steps              Int?                       @default(0)
  created_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  config_patient           config_patient?
  organization_has_patient organization_has_patient[]
  patient_data             patient_data?

  @@schema("public")
}

model organization_has_patient {
  o_id          String        @db.Uuid
  p_id          String        @db.Uuid
  created_at    DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?     @default(now()) @db.Timestamptz(6)
  organizations organizations @relation(fields: [o_id], references: [o_id], onDelete: Cascade, onUpdate: NoAction)
  patients      patients      @relation(fields: [p_id], references: [p_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([o_id, p_id])
  @@schema("public")
}

model organization_has_device {
  o_id          String        @db.Uuid
  d_id          String        @db.Uuid
  created_at    DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?     @default(now()) @db.Timestamptz(6)
  devices       devices       @relation(fields: [d_id], references: [d_id], onDelete: Cascade, onUpdate: NoAction)
  organizations organizations @relation(fields: [o_id], references: [o_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([o_id, d_id])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String        @db.Uuid
  created_at            DateTime      @db.Timestamptz(6)
  updated_at            DateTime      @db.Timestamptz(6)
  authentication_method String
  id                    String        @id(map: "amr_id_pk") @db.Uuid
  sessions              auth_sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id          String      @id @db.Uuid
  factor_id   String      @db.Uuid
  created_at  DateTime    @db.Timestamptz(6)
  verified_at DateTime?   @db.Timestamptz(6)
  ip_address  String      @db.Inet
  otp_code    String?
  mfa_factors mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                 String           @id @db.Uuid
  user_id            String           @db.Uuid
  friendly_name      String?
  factor_type        factor_type
  status             factor_status
  created_at         DateTime         @db.Timestamptz(6)
  updated_at         DateTime         @db.Timestamptz(6)
  secret             String?
  phone              String?          @unique
  last_challenged_at DateTime?        @unique @db.Timestamptz(6)
  mfa_challenges     mfa_challenges[]
  users              users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_verified_phone_factor")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?        @db.Uuid
  id          BigInt         @id @default(autoincrement())
  token       String?        @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?        @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime?      @db.Timestamptz(6)
  updated_at  DateTime?      @db.Timestamptz(6)
  parent      String?        @db.VarChar(255)
  session_id  String?        @db.Uuid
  sessions    auth_sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model auth_sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@map("sessions")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    auth_sessions[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}
